/**
 * @file	lclogrecordhandler.h
 *
 * @brief	Class for loggers.
 *
 * @version	$Id$
 *
 * Copyright &copy; 2008-2009, Ammar Hakim. Released under Eclipse
 * Licence version 1.0.
 */

#ifndef LC_LOG_RECORD_HANDLER_H
#define LC_LOG_RECORD_HANDLER_H

// std includes
#include <ios>
#include <iostream>
#include <map>

namespace Lucee
{
// forward declare logger class
  class Logger;

/**
 * Class to handle log messages generated by the logging system. This
 * class can not be used directly. Instead, children handlers must
 * provide the needed functionality.
 */
  class LogRecordHandler
  {
    public:
/**
 * Destroy handler.
 */
      virtual ~LogRecordHandler();

/**
 * Write message 'msg' to the output stream.
 *
 * @param msg Message to write to stream.
 */
      virtual void write(const std::string& msg);

/**
 * Set logger to which this handler is attached.
 *
 * @param logger Logger to which this handler is attached.
 */
      void attachLogger(Lucee::Logger& logger);

/**
 * Get number of loggers this handler is attached to.
 *
 * @return number of loggers this handler is attached to.
 */
      unsigned numAttached() const;

    protected:
/**
 * Create new handler, attaching it to the specified stream.
 *
 * @param stream Stream to attach to handler.
 */
      LogRecordHandler(std::ostream& stream);

    private:
/** Reference to output stream */
      std::ostream& _outStream;
/** Map of loggers to which this handler is attached */
      std::map<std::string, Logger*> _loggers;
  };
}

#endif // LC_LOG_RECORD_HANDLER_H
