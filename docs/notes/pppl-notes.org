# -*- org -*-

* January 13th 2012

  Extended the Field::writeToFile method to work in parallel. This was
  trickier than I thought as in some constructors the global region
  was not being set correctly. Fixed all this.

  There are no unit tests for this stuff yet. However, I wrote a lua
  script to create a CartGrid in parallel and made sure that the lower
  and upper bound on each rank was correct. This brings up a more
  general question: how to incorporate unit tests run from Lua using
  the main Lucee executable into the ctest system?
  
  Also, to allow unit testing I add methods Lucee.getRank() and
  Lucee.getNumProcs() to the top-level "Lucee" module so this
  information can be queried from Lua.

  I need to test the parallel Field from a unit test. This can be done
  by creating a field in parallel in which each local region is
  computed from a decomp while the same global region is used. This
  should create a field that behaves like a parallel field.

  Minor fixup: renamed globalBox -> globalRegion and localBox ->
  localRegion. This makes the code more consistent.

  Now that my facetsall access is enabled again I should be able to
  setup a regression test repo and see how it can be cron-ed at PPPL.

* January 12th 2012

  More reading up on Krommes 02. Made plans with Greg on how to move
  forward with the project. Will implement couple of schemes from
  Peterson & Hammett paper and then flux-reconstruction DG and Shu-DG
  for 2D incompressible flow problem.

* January 11th 2012

  Spent most of the day working on reviewing basic stuff on
  turbulence, reading Krommes's notes and other references. No work on
  Lucee. Eventually need to understand field-theory approach to
  deriving the GKE.

* January 10th 2012

  Creating a new org file for work done at PPPL. Completed a brief
  LDEVP on the parallel field implementation. Registered the
  decomposition objects so they can now be created from Lua. Next step
  is to hook these up the grid and field classes, implement sync() and
  test. Easier said than done.

  A significant unresolved issue: how to deal with periodic domains?
  The neighbor calculation code needs to change for that. Essentially
  on each periodic side of the global region (including corners) we
  need to make copies of the global region. This will then give the
  proper neighbors, including self-intersections. Some ambiguity
  exists in the case in which the only one direction is
  periodic. Question: should the periodic conditions include corners
  in this case? I do not know, yet.

  Now StructuredGridBase gets the decomposition object and uses it to
  compute the decomposition. Local and global regions are set
  correctly, at least in serial. Need to add tests for this.

  I am having some problems compiling the code in parallel: a bunch of
  undefined-symbol errors are showing up at link line. This probably
  due to a bad MPI build. I need to reactivate my Facetsall
  permissions and rebuild the complete tool chain. Grr ...

  FIXED parallel build problem. I am not sure if this is the correct
  way to do things. But builds for now. Next need to test the
  structured grid in parallel.

** TODO Create a new repo with regression tests.

   Just use TX's txtest system. It is good enough for our needs and
   will be one less thing to maintain.
  
