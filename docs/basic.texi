This chapter describes the basic infrastructure classes in Lucee.

@section @code{Lucee::Array}: Basic array class.
@cindex serial arrays

@subsection Overview

The @code{Lucee::Array} class provides serial array of arbitrary rank
(dimensions). By default arrays are zero-based but other start indices
can also be specified. Arrays can be created by specifying the shape
and, optionally, the starting index along each rank.

@example
#include <LcArray.h>

unsigned shape[2] = @{5, 10@};
Lucee::Array<2, double> arr1(shape);

int start[2] = @{2, 0@};
Lucee::Array<2, double> arr2(shape, start);
@end example

@noindent
This will create rank-two @math{5\times 10} arrays @code{arr1}, indexed
starting @math{(0,0)}, and @code{arr2}, indexed starting
@math{(2,0)}. All elements in the array can be set using the assignment
operator: for example, @code{arr1=5.0}, will set all elements of
@code{arr1} to @math{5.0}. One can loop over the arrays, setting them:
@example
for (int i=arr1.getStart(0); i<arr1.getEnd(0); ++i)
  for (int j=arr1.getStart(1); j<arr1.getEnd(1); ++j)
    arr1(i,j) = i+j;
@end example

@subsection Reference

The class @code{Lucee::Array} provides a N-dimensional, reference
counted, array of arbitrary types. It is declared as:
@example
namespace Lucee
@{
  template <unsigned NDIM, typename T> class Array;
@}
@end example
@noindent 
The first template parameter indicates the rank of the array and the
second, the type of data stored in the array.

@deftypemethod Lucee::Arrayx unsigned getRank ()
Return the rank of the array.
@end deftypemethod

@deftypemethod Lucee::Array void fillWithShape (@code{unsigned} shape[N])
On return fill the shape of the array in @code{shape}.
@end deftypemethod

@deftypemethod Lucee::Array @code{unsigned} getShape (@code{int} dir)
Return the shape of the array in direction @code{dir}.
@end deftypemethod

@deftypemethod Lucee::Array @code{int} getStart (@code{int} dir)
Return the starting index in direction @code{dir}.
@end deftypemethod

@deftypemethod Lucee::Array @code{int} getEnd (@code{int} dir)
Return @emph{one past} the last index in direction @code{dir}.
@end deftypemethod

@deftypemethod Lucee::Array @code{T&} operator() (@code{int} i, @code{int} j, ...)
Access element at @math{(i,j,\ldots)} index location in array. For a
@math{N}-dimensional array exactly @math{N} indices must be specified. A
compile-time error will occur when trying to use this method with the
incorrect number of indices.
@end deftypemethod

@deftypemethod Lucee::Array @code{T&} operator() (@code{int} i[N])
Access element at index @math{(i_0,i_1,\ldots)} index location in array.
@end deftypemethod

@deftypemethod Lucee::Array @code{Lucee::Array&} operator= (@code{const T&} val)
Set all elements of array to @code{val}.
@end deftypemethod
