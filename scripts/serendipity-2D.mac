/** Serendipity basis functions in 2D */

/** Function to make coefficient matrix */
makeCoeffMatrix(nord, linCoeff) := block([n, m, ajk],
                 [n,m] : matrix_size(linCoeff),
		 ajk : (ajk : zeromatrix(nord, nord), for i from 1 thru nord
		         do (for j from 1 thru nord
			   do (ajk[i,j] : linCoeff[nord*(i-1)+j][1])), ajk),
		 return (ajk)
);

/** Function to compute mass matrix */
calcMassMatrix(basis) := block([n, mass],
                n : length(basis),
		mass : (mass : zeromatrix(n,n), for i from 1 thru n
		         do (for j from 1 thru n
			   do (mass[i,j] : integrate(integrate(basis[i]*basis[j], x, -1,1), y, -1, 1))),
			   mass),
	        return (mass)
);

/** Function to compute "face" mass matrix */
calcFaceMassMatrix(basis) := block([n, mass],
                n : length(basis),
		mass : (mass : zeromatrix(n,n), for i from 1 thru n
		         do (for j from 1 thru n
			   do (mass[i,j] : 
			   integrate(
			     subst(x=-1,basis[i])*subst(x=-1,basis[j]), y, -1,1)
			   +
			   integrate(
			     subst(x=1,basis[i])*subst(x=1,basis[j]), y, -1,1)
			   +
			   integrate(
			     subst(y=-1,basis[i])*subst(y=-1,basis[j]), x, -1,1)
			   +
			   integrate(
			     subst(y=1,basis[i])*subst(y=1,basis[j]), x, -1,1)
			    )),
			   mass),
	        return (mass)
);

/** Function to compute stiffness matrix */
calcStiffMatrix(basis) := block([n, stiff],
                n : length(basis),
		stiff : (stiff : zeromatrix(n,n), for i from 1 thru n
		          do (for j from 1 thru n
			    do (stiff[i,j] : integrate(integrate(
                             4/dx2*diff(basis[i],x)*diff(basis[j],x) + 
                             4/dy2*diff(basis[i],y)*diff(basis[j],y),
                               x, -1,1), y, -1,1))),
	                  stiff),
	        return (stiff)
);

/** Function to compute gradient stiffness matrix */
calcGradStiffMatrix_x(basis) := block([n, stiff],
                n : length(basis),
		stiff : (stiff : zeromatrix(n,n), for i from 1 thru n
		          do (for j from 1 thru n
			    do (stiff[i,j] : integrate(
                              integrate(2/dx*diff(basis[i],x)*basis[j], x, -1,1), 
                             y, -1,1))),
	                  stiff),
	        return (stiff)
);

/** Function to compute gradient stiffness matrix */
calcGradStiffMatrix_y(basis) := block([n, stiff],
                n : length(basis),
		stiff : (stiff : zeromatrix(n,n), for i from 1 thru n
		          do (for j from 1 thru n
			    do (stiff[i,j] : integrate(
                              integrate(2/dy*diff(basis[i],y)*basis[j], x, -1,1),
                             y, -1,1))),
	                  stiff),
	        return (stiff)
);

/** Ordinates */
ords : [[-1,-1], [1,-1], [1,1], [-1,1]];
/** Basis function of order 2 */
N2 : 1/4*[
 (1+ords[1][1]*x)*(1+ords[1][2]*y), 
 (1+ords[2][1]*x)*(1+ords[2][2]*y), 
 (1+ords[3][1]*x)*(1+ords[3][2]*y), 
 (1+ords[4][1]*x)*(1+ords[4][2]*y)];

/** Compute mass matrix */
N2_mass : calcMassMatrix(N2);
N2_face_mass : calcFaceMassMatrix(N2);
N2_lift : invert(N2_mass) . N2_face_mass;

/** Compute stiffness matrices */
N2_stiff : calcStiffMatrix(N2);
N2_grad_stiff_x : calcGradStiffMatrix_x(N2);
N2_grad_stiff_y : calcGradStiffMatrix_y(N2);

/** Compute differentiation matrices */
N2_Diff_x : invert(N2_mass) . transpose(N2_grad_stiff_x);
N2_Diff_y : invert(N2_mass) . transpose(N2_grad_stiff_y);

/** Compute explicit formulas for derivatives */
N2_phi_c : transpose(matrix([p0, p1, p2, p3]));
N2_Explicit_Diff_x : N2_Diff_x . N2_phi_c;
N2_Explicit_Diff_y : N2_Diff_y . N2_phi_c;

/** Ordinates */
ords : [[-1,-1], [1,-1], [1,1], [-1,1], [0,-1], [1,0], [0,1], [-1,0]];
/** Basis functions of order 3 */
N3 : [
  1/4*(1+ords[1][1]*x)*(1+ords[1][2]*y)*(-1+ords[1][1]*x+ords[1][2]*y),
  1/4*(1+ords[2][1]*x)*(1+ords[2][2]*y)*(-1+ords[2][1]*x+ords[2][2]*y),
  1/4*(1+ords[3][1]*x)*(1+ords[3][2]*y)*(-1+ords[3][1]*x+ords[3][2]*y),
  1/4*(1+ords[4][1]*x)*(1+ords[4][2]*y)*(-1+ords[4][1]*x+ords[4][2]*y),
  1/2*(1-x^2)*(1+ords[5][2]*y),
  1/2*(1-y^2)*(1+ords[6][1]*x),
  1/2*(1-x^2)*(1+ords[7][2]*y),
  1/2*(1-y^2)*(1+ords[8][1]*x)];

/** Compute mass matrix */
N3_mass : calcMassMatrix(N3);
N3_face_mass : calcFaceMassMatrix(N3);
N3_lift : invert(N3_mass) . N3_face_mass;

/** Compute stiffness matrices */
N3_stiff : calcStiffMatrix(N3);
N3_grad_stiff_x : calcGradStiffMatrix_x(N3);
N3_grad_stiff_y : calcGradStiffMatrix_y(N3);

/** Compute differentiation matrices */
N3_Diff_x : invert(N3_mass) . transpose(N3_grad_stiff_x);
N3_Diff_y : invert(N3_mass) . transpose(N3_grad_stiff_y);

/** Compute explicit formulas for derivatives */
N3_phi_c : transpose(matrix([p0, p1, p2, p3, p4, p5, p6, p7]));
N3_Explicit_Diff_x : N3_Diff_x . N3_phi_c;
N3_Explicit_Diff_y : N3_Diff_y . N3_phi_c;