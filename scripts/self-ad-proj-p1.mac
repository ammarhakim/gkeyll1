/** Algebra to determine a self-adjoint projection operator */

load(diag);
/** Matrix of Legendre polynomial normalization coefficients (two is taken out) */
nCoeff : diag([1, 1/3]); 

abar_l(i) := 1/2*(a(0,i-1) + alp*a(1,i-1) + a(0,i) - alp*a(1,i));
abar_r(i) := 1/2*(a(0,i) + alp*a(1,i) + a(0,i+1) - alp*a(1,i+1));

abar_0 : fullratsimp( 1/2*(abar_r(i)+abar_l(i)) );
abar_1 : fullratsimp( 1/2*(abar_r(i)-abar_l(i)) );

/** Write in terms of shift operator */
slist : [a(0,i-1)=Ti*a(0,i), a(0,i+1)=T*a(0,i),
  a(1,i-1)=Ti*a(1,i), a(1,i+1)=T*a(1,i)];

t1 : subst( slist, abar_0);
t2 : subst( slist, abar_1);

/** Construct coefficient matrix */
abar_mat : nCoeff . coefmatrix([t1,t2], [a(0,i),a(1,i)]);
