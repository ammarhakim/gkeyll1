/* Generate the 20-moment equations */

load(itensor);

/** Declare symmetries */
decsym(P,2,0,[sym(all)],[]);
decsym(Q,3,0,[sym(all)],[]);

/** Number density */
dn : p0*D(u(1)) + u(1)*D(n);

/** Velocity */
du(i) := 1/p0*D(P([1,i],[])) + u(1)*D(u(i));

/** Pressure */
dP(i,j) := P([i,j],[])*D(u(1)) + D(u(i))*P([j,1],[]) + D(u(j))*P([i,1],[]) + u(1)*D(P([i,j],[]))
     + D(Q([i,j,1],[]));

cDP(i,j) := D((P([i,j],[])));
pdpm(i,j,k) := P([i,j],[])*D(P([k,1],[]));
pmdp(i,j,k) := P([i,1],[])*D(P([j,k],[]));
pp(i,j,k) := P([i,j],[])*P([k,1],[]);

/** Heat flux tensor */
dQ(i,j,k) :=
 -1/p0*(cDP(1,i)*P([j,k],[]) + cDP(1,j)*P([k,i],[]) + cDP(1,k)*P([i,j],[]))
 + D(u(1))*Q([i,j,k],[])
 + D(u(i))*Q([j,k,1],[]) + D(u(j))*Q([k,i,1],[]) + D(u(k))*Q([i,j,1],[])
 + u(1)*D(Q([i,j,k],[]));

/** Construct list of equations */

eqList : map(canform, [
  dn, 
  du(1), du(2), du(3), 
  dP(1,1), dP(1,2), dP(1,3), dP(2,2), dP(2,3), dP(3,3),
  dQ(1,1,1), dQ(1,1,2), dQ(1,1,3), dQ(1,2,2), dQ(1,2,3), dQ(1,3,3), dQ(2,2,2), dQ(2,2,3), dQ(2,3,3), dQ(3,3,3)]);

dqq(i,j,k) := D(Q([i,j,k],[]));

diffList : map(D, [n, 
  u(1), u(2), u(3), 
  P([1,1],[]), P([1,2],[]), P([1,3],[]), P([2,2],[]), P([2,3],[]), P([3,3],[]),
  Q([1,1,1],[]), Q([1,1,2],[]), Q([1,1,3],[]), Q([1,2,2],[]), Q([1,2,3],[]), Q([1,3,3],[]),
  Q([2,2,2],[]), Q([2,2,3],[]), Q([2,3,3],[]),
  Q([3,3,3],[])
]);


/** Construct coefficient matrix */
Atmp : coefmatrix(eqList, diffList);

/** Perform substitutions to clean up final matrix */
Atm : subst(
    [u(1)=u1, u(2)=u2, u(3)=u3,
     P([1,1],[])=p11, P([1,2],[])=p12, P([1,3],[])=p13, 
     P([2,2],[])=p22, P([2,3],[])=p23,
     P([3,3],[])=p33,
     Q([1,1,1],[])=q111, Q([1,1,2],[])=q112, Q([1,1,3],[])=q113,
     Q([1,2,2],[])=q122, Q([1,2,3],[])=q123, 
     Q([1,3,3],[])=q133,
     Q([2,2,2],[])=q222, Q([2,2,3],[])=q223,
     Q([2,3,3],[])=q233,
     Q([3,3,3],[])=q333],
 Atmp);
