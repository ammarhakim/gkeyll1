This is the list of functions in the quadrules.h header. See the
corresponding C function in quadrules.c file for documentation.

BASHFORTH_SET sets abscissas and weights for Adams-Bashforth quadrature.
BDF_SET sets weights for backward differentiation ODE weights.
BDFC_SET sets weights for backward differentiation corrector quadrature.
BDFP_SET sets weights for backward differentiation predictor quadrature.
BDF_SUM carries out explicit backward difference quadrature on [0,1].
CH_CAP capitalizes a single character.
CHEB_SET sets abscissas and weights for Chebyshev quadrature.
CHEBYSHEV1_COMPUTE computes a Gauss-Chebyshev type 1 quadrature rule.
CHEBYSHEV1_INTEGRAL evaluates a monomial Chebyshev type 1 integral.
CHEBYSHEV2_COMPUTE computes a Gauss-Chebyshev type 2 quadrature rule.
CHEBYSHEV2_INTEGRAL evaluates a monomial Chebyshev type 2 integral.
CHEBYSHEV3_COMPUTE computes a Gauss-Chebyshev type 3 quadrature rule.
CLENSHAW_CURTIS_COMPUTE computes a Clenshaw Curtis quadrature rule.
CLENSHAW_CURTIS_SET sets a Clenshaw-Curtis quadrature rule.
FEJER1_COMPUTE computes a Fejer type 1 quadrature rule.
FEJER1_SET sets abscissas and weights for Fejer type 1 quadrature.
FEJER2_COMPUTE computes a Fejer type 2 quadrature rule.
FEJER2_SET sets abscissas and weights for Fejer type 2 quadrature.
GEGENBAUER_COMPUTE computes a Gauss-Gegenbauer quadrature rule.
GEGENBAUER_INTEGRAL evaluates the integral of a monomial with Gegenbauer weight.
GEGENBAUER_RECUR finds the value and derivative of a Gegenbauer polynomial.
GEGENBAUER_ROOT improves an approximate root of a Gegenbauer polynomial.
GEN_HERMITE_COMPUTE computes a generalized Gauss-Hermite rule.
GEN_HERMITE_INTEGRAL evaluates a monomial generalized Hermite integral.
GEN_LAGUERRE_COMPUTE computes a generalized Gauss-Laguerre quadrature rule.
GEN_LAGUERRE_INTEGRAL evaluates a monomial generalized Laguerre integral.
GEN_LAGUERRE_RECUR evaluates a generalized Laguerre polynomial.
GEN_LAGUERRE_ROOT improves a root of a generalized Laguerre polynomial.
HERMITE_EK_COMPUTE computes a Gauss-Hermite quadrature rule.
HERMITE_GENZ_KEISTER_SET sets a Hermite Genz-Keister rule.
HERMITE_INTEGRAL evaluates a monomial Hermite integral.
HERMITE_SET sets abscissas and weights for Hermite quadrature.
HERMITE_SS_COMPUTE computes a Gauss-Hermite quadrature rule.
HERMITE_SS_RECUR finds the value and derivative of a Hermite polynomial.
HERMITE_SS_ROOT improves an approximate root of a Hermite polynomial.
I4_FACTORIAL2 computes the double factorial function N!!
I4_MIN returns the smaller of two I4's.
I4_POWER returns the value of I^J.
IMTQLX diagonalizes a symmetric tridiagonal matrix.
JACOBI_COMPUTE computes a Gauss-Jacobi quadrature rule.
JACOBI_INTEGRAL evaluates the integral of a monomial with Jacobi weight.
JACOBI_RECUR finds the value and derivative of a Jacobi polynomial.
JACOBI_ROOT improves an approximate root of a Jacobi polynomial.
KRONROD_SET sets abscissas and weights for Gauss-Kronrod quadrature.
LAGUERRE_COMPUTE computes a Gauss-Laguerre quadrature rule.
LAGUERRE_INTEGRAL evaluates a monomial Laguerre integral.
LAGUERRE_RECUR evaluates a Laguerre polynomial.
LAGUERRE_ROOT improves a root of a Laguerre polynomial.
LAGUERRE_SET sets abscissas and weights for Laguerre quadrature.
LAGUERRE_SUM carries out Laguerre quadrature over [ A, +oo ).
LEGENDRE_COMPUTE_DR: Gauss-Legendre quadrature by Davis-Rabinowitz method.
LEGENDRE_INTEGRAL evaluates a monomial Legendre integral.
LEGENDRE_RECUR finds the value and derivative of a Legendre polynomial.
LEGENDRE_SET sets abscissas and weights for Gauss-Legendre quadrature.
LEGENDRE_SET_COS: Gauss-Legendre rules for COS(X)*F(X) on [-PI/2,PI/2].
LEGENDRE_SET_COS2: Gauss-Legendre rules for COS(X)*F(X) on [0,PI/2].
LEGENDRE_SET_LOG sets a Gauss-Legendre rule for - LOG(X) * F(X) on [0,1].
LEGENDRE_SET_SQRTX_01 sets Gauss-Legendre rules for SQRT(X)*F(X) on [0,1].
LEGENDRE_SET_SQRTX2_01: Gauss-Legendre rules for F(X)/SQRT(X) on [0,1].
LEGENDRE_SET_X0_01 sets a Gauss-Legendre rule for F(X) on [0,1].
LEGENDRE_SET_X1 sets a Gauss-Legendre rule for ( 1 + X ) * F(X) on [-1,1].
LEGENDRE_SET_X1_01 sets a Gauss-Legendre rule for X * F(X) on [0,1].
LEGENDRE_SET_X2 sets Gauss-Legendre rules for ( 1 + X )^2*F(X) on [-1,1].
LEGENDRE_SET_X2_01 sets a Gauss-Legendre rule for X*X * F(X) on [0,1].
LOBATTO_COMPUTE computes a Lobatto quadrature rule.
LOBATTO_SET sets abscissas and weights for Lobatto quadrature.
MOULTON_SET sets weights for Adams-Moulton quadrature.
NC_COMPUTE computes a Newton-Cotes quadrature rule.
NCC_COMPUTE computes a Newton-Cotes Closed quadrature rule.
NCC_COMPUTE_POINTS: points of a Newton-Cotes Closed quadrature rule.
NCC_COMPUTE_WEIGHTS: weights of a Newton-Cotes Closed quadrature rule.
NCC_SET sets abscissas and weights for closed Newton-Cotes quadrature.
NCO_COMPUTE computes a Newton-Cotes Open quadrature rule.
NCO_COMPUTE_POINTS: points of a Newton-Cotes Open quadrature rule.
NCO_COMPUTE_WEIGHTS: weights of a Newton-Cotes Open quadrature rule.
NCO_SET sets abscissas and weights for open Newton-Cotes quadrature.
NCOH_COMPUTE computes a Newton-Cotes "open half" quadrature rule.
NCOH_SET sets abscissas and weights for Newton-Cotes "open half" rules.
PATTERSON_SET sets abscissas and weights for Gauss-Patterson quadrature.
R8_ABS returns the absolute value of an R8.
R8_EPSILON returns the R8 roundoff unit.
R8_FACTORIAL computes the factorial of N, also denoted "N!".
R8_FACTORIAL2 computes the double factorial function N!!
R8_GAMMA evaluates Gamma(X) for a real argument.
R8_HUGE returns a "huge" R8.
R8_HYPER_2F1 evaluates the hypergeometric function 2F1(A,B,C,X).
R8_MAX returns the maximum of two R8's.
R8_PSI evaluates the function Psi(X).
R8_SIGN returns the sign of an R8.
R8VEC_COPY copies an R8VEC.
R8VEC_DOT_PRODUCT computes the dot product of a pair of R8VEC's.
R8VEC_REVERSE reverses the elements of an R8VEC.
RADAU_COMPUTE computes a Radau quadrature rule.
RADAU_SET sets abscissas and weights for Radau quadrature.
RULE_ADJUST maps a quadrature rule from [A,B] to [C,D].
S_EQI reports whether two strings are equal, ignoring case.
SUM_SUB carries out a composite quadrature rule.
SUMMER carries out a quadrature rule over a single interval.
SUMMER_GK carries out Gauss-Kronrod quadrature over a single interval.
SUM_SUB_GK carries out a composite Gauss-Kronrod rule.
TIMESTAMP prints the current YMDHMS date as a time stamp.